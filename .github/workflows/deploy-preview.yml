name: Deploy and Test
on: [pull_request]
env:
  NEON_DATABASE_USERNAME: ${{ secrets.NEON_DATABASE_USERNAME }} # change this to your database username
  GH_TOKEN: ${{ secrets.GH_TOKEN }} # Required for commenting on pull requests for private repos
  NEON_API_KEY: ${{ secrets.NEON_API_KEY }} # You can generate a an API key in your account settings
  NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }} # You can find this in your project settings
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

jobs:
  deploy-preview:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      # - uses: actions/checkout@v4
      # - name: Get branch name
      #   id: branch-name
      #   uses: tj-actions/branch-names@v8

      # - name: Create Neon Branch
      #   id: create-branch
      #   uses: neondatabase/create-branch-action@v5
      #   with:
      #     project_id: ${{ env.NEON_PROJECT_ID }}
      #     branch_name: preview/pr-${{ github.event.number }}-${{ steps.branch-name.outputs.current_branch }}
      #     database: jamesdb
      #     username: ${{ env.NEON_DATABASE_USERNAME }}
      #     api_key: ${{ env.NEON_API_KEY }}

      # - name: Run Migrations
      #   run: |
      #     echo ${{ steps.create-branch.outputs.db_url_with_pooler }}?sslmode=require >> "$GITHUB_ENV"

      #     touch .env

      #     echo DATABASE_URL=${{ steps.create-branch.outputs.db_url_with_pooler }}?sslmode=require >> .env
      #     echo DATABASE_URL_UNPOOLED=${{ steps.create-branch.outputs.db_url }}?sslmode=require >> .env

      #     npx prisma generate
      #     npx prisma migrate deploy

      # - name: Install Vercel CLI
      #   run: npm install --global vercel@latest

      # - name: Pull Vercel Environment Information
      #   run: vercel pull --yes --environment=preview --token=${{ env.VERCEL_TOKEN }}

      # - name: Build Project Artifacts
      #   run: vercel build --token=${{ env.VERCEL_TOKEN }}

      # - name: Deploy Preview to Vercel
      #   id: deploy
      #   run: echo preview_url=$(vercel deploy --prebuilt --token=${{ env.VERCEL_TOKEN }}) >> $GITHUB_OUTPUT
      # - name: Comment on Pull Request
      #   uses: thollander/actions-comment-pull-request@v2
      #   with:
      #     message: |
      #       Vercel Preview URL :rocket: : ${{ steps.deploy.outputs.preview_url }}
      #       Neon branch :elephant: : https://console.neon.tech/app/projects/${{ env.NEON_PROJECT_ID }}/branches/${{ steps.create-branch.outputs.branch_id }}

      - uses: actions/setup-node@v4
        with:
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Install playwright browsers
        run: npx playwright install --with-deps chromium
      - name: create env file
        run: |
          touch .env
          echo DATABASE_URL=${{steps.create-branch.outputs.db_url}}?sslmode=require >> .env
          echo PREVIEW_URL=https://ultimate-scoring-fot3unnan-jamesodonoghues-projects.vercel.app >> .env
      - name: Run tests
        run: npm run test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
