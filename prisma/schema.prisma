// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Team {
    id            Int    @id @default(autoincrement())
    name          String
    gamesHomeTeam Game[] @relation(name: "HomeTeam")
    gamesAwayTeam Game[] @relation(name: "AwayTeam")

    @@index([id])
}

model Game {
    id            Int      @id @default(autoincrement())
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    createdBy     String?
    homeTeam      Team     @relation(name: "HomeTeam", fields: [homeTeamId], references: [id])
    homeTeamId    Int
    awayTeam      Team     @relation(name: "AwayTeam", fields: [awayTeamId], references: [id])
    awayTeamId    Int
    homeTeamScore Int      @default(0)
    awayTeamScore Int      @default(0)
    points        Point[]

    @@index([homeTeamId])
    @@index([awayTeamId])
    @@index([createdBy])
}

model Player {
    id          Int           @id @default(autoincrement())
    name        String
    pointPlayer PointPlayer[]
}

model Point {
    id          Int           @id @default(autoincrement())
    game        Game          @relation(fields: [gameId], references: [id])
    gameId      Int
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    createdBy   String?
    status      PointStatus   @default(READY)
    scoringTeam String?
    players     PointPlayer[]
}

model PointPlayer {
    id        Int    @id @default(autoincrement())
    player    Player @relation(fields: [playerId], references: [id])
    playerId  Int
    assists   Int
    goals     Int
    blocks    Int
    turnovers Int
    point     Point? @relation(fields: [pointId], references: [id])
    pointId   Int?
}

enum PointStatus {
    READY
    STARTED
    COMPLETED
}
